import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { XataClient } from '@/xata';
import { useState } from 'react';

export default function Home({ todos }) {
  const [text, setText] = useState('');

  const handleSubmit = async (event) => {
    event.preventDefault();
    await fetch('api/add-todo', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ text })
    });
    window?.location.reload()
  }

  const handleDeleteTodo = async (id) => {
    await fetch('api/delete-todo', {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ id })
    })
    window?.location.reload()
  }
  return (
    <>
      <Head>
        <title>To-do App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <form
          onSubmit={handleSubmit}
          className={styles.form}
        >
          <label for="addTodo">
            Add todo
          </label>
          <input
            id="addTodo"
            className={styles.input}
            type="text"
            value={text}
            onChange={(event) => setText(event.target.value)}
          />
          <button className={styles.btn}>
            Add
          </button>
        </form>
        <div className={styles.todos}>
          {todos.map((option) => (
            <div
              className={styles.todo}
              key={option.id}
            >
              <p>{option.todo}</p>
              <button
                className={styles.todoBtn}
                onClick={() => handleDeleteTodo(option.id)}
              >
                X
              </button>
            </div>
          ))}
        </div>
      </main>
    </>
  )
}

const xata = new XataClient();

export const getServerSideProps = async () => {
  const todos = await xata.db.todos.getAll();
  return {
    props: {
      todos
    }
  }
}
